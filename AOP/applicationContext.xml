<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
">


    <!--
                           Spring 框架一般基于AspectJ实现AOP操作
    连接点:类里面可以被增强的方法
    切入点:实际被真正增强的方法
    通知: 实际增强的逻辑部分
         前置通知  后置通知  环绕通知  异常通知  最终通知
    切面:把通知应用的切入点的过程

    切入点表达式:
       execution([权限修饰符][返回类型][类全路径][方法名称]([参数列表]))
       * 全路径.类名.方法名(..)   * 全路径.类名.*(..)  * 全路径.*.*(..)
    -->

    <!--开启注解支持-->
    <context:annotation-config/>
    <!--扫描注解-->
    <context:component-scan base-package="dao Log diy"/>
    <!--开启AspectJ AOP注解支持-->
    <aop:aspectj-autoproxy/>


    <!--SpringAPI实现-->
    <aop:config>
        <!--切入点-->
        <aop:pointcut id="pointCut" expression="execution(* dao.UserDaoImpl.*(..))"/>
        <!--执行环绕增强  通知-->
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointCut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointCut"/>
    </aop:config>

    <!--diy自定义类实现-->
    <aop:config>
        <!-- 切面   重点 -->
        <aop:aspect ref="diy">
            <!--切入点-->
            <aop:pointcut id="point" expression="execution(* dao.UserDaoImpl.*(..))"/>
            <!--通知-->
            <aop:after method="after" pointcut-ref="point"/>
            <aop:before method="before" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>

</beans>
